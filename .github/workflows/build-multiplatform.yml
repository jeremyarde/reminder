name: "publish"
on:
  push:
    branches:
    - release

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
         
    - name: Cache rust/cargo modules
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - uses: actions/checkout@v2
    - name: setup node
      uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: install tauri bundler
      run: cargo install tauri-bundler --force

    - name: install webkit2gtk (ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y webkit2gtk-4.0
        
    - name: install app dependencies and build it
      run: cd frontend && yarn && yarn build
    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
        releaseName: "App v__VERSION__"
        releaseBody: "See the assets to download this version and install."
        releaseDraft: true
        prerelease: false
        
        
#   create-release:
#     runs-on: ubuntu-latest
#     outputs:
#       RELEASE_UPLOAD_ID: ${{ steps.create_release.outputs.id }}

#     steps:
#       - uses: actions/checkout@v2
#       - name: setup node
#         uses: actions/setup-node@v1
#         with:
#           node-version: 12
#       - name: get version
#         run: echo ::set-env name=PACKAGE_VERSION::$(node -p "require('./package.json').version")
#       - name: create release
#         id: create_release
#         uses: actions/create-release@v1.1.0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: app-v${{ env.PACKAGE_VERSION }}
#           release_name: "Desktop app v${{ env.PACKAGE_VERSION }}"
#           body: "See the assets to download this version and install."
#           draft: true
#           prerelease: false
#   build-tauri:
#     needs: create-release
#     strategy:
#       fail-fast: false
#       matrix:
#         platform: [macos-latest, ubuntu-latest, windows-latest]

#     runs-on: ${{ matrix.platform }}
#     steps:
#     - uses: actions/checkout@v2
#     - name: setup node
#       uses: actions/setup-node@v1
#       with:
#         node-version: 12
#     - name: install Rust stable
#       uses: actions-rs/toolchain@v1
#       with:
#         toolchain: stable
#     - name: install tauri bundler
#       run: cargo install tauri-bundler --force
#     - name: install webkit2gtk (ubuntu only)
#       if: matrix.platform == 'ubuntu-latest'
#       run: |
#         sudo apt-get update
#         sudo apt-get install -y webkit2gtk-4.0
#     - name: install app dependencies and build it
#       run: yarn && yarn build
#     - uses: tauri-apps/tauri-action@v0
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         releaseId: ${{ needs.create-release.outputs.RELEASE_UPLOAD_ID }}
