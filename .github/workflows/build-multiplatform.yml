name: "publish"
on:
  push:
    tags:
      - v*

jobs:
  publish-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      # - name: Create release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     # body: |
      #     #   Changes in this Release
      #     #   - First Change
      #     #   - Second Change
      #     draft: false
      #     prerelease: false

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache rust/cargo modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: install tauri bundler
        run: cargo install tauri-bundler --force

      - name: install webkit2gtk (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0

      - name: Build application
        run: cd frontend && yarn && yarn add tauri && yarn tauri build

      # - name: Upload build
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: releases
      #     path: frontend/src-tauri/target/release/bundle/*

      # - name: Build zip of assets
      #   run: zip /frontend/src-tauri/target/release/bundle/release.zip /frontend/src-tauri/target/release/bundle/*

      # - uses: montudor/action-zip@v0.1.0
      #   with:
      #     args: zip -qq -r frontend/src-tauri/target/release/bundle/release.zip frontend/src-tauri/target/release/bundle/*

      - uses: actions/upload-artifact@v2
        with:
          name: release
          path: frontend/src-tauri/target/release/bundle/*

      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     asset_path: ./frontend/src-tauri/target/release/bundle/*
      #     asset_name: release.zip
      #     asset_content_type: application/zip
