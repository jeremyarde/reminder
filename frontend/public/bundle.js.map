{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/Habit.svelte","../node_modules/localforage/dist/localforage.js","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.29.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\r\n  let curr_interval;\r\n  let intervalActive = false;\r\n\r\n  document.onkeydown = function (event) {\r\n    console.log(event);\r\n    if (event.key == \"Enter\") {\r\n      startPauseHabit();\r\n    } else if (event.key == \"Backspace\") {\r\n      handleDelete(habit.id);\r\n    }\r\n  };\r\n\r\n  export let habit;\r\n  export let handleDelete;\r\n\r\n  let incompleteStyle =\r\n    \"flex justify-center flex-wrap m-2 bg-green-200 rounded relative border\";\r\n  let almostCompleteStyle =\r\n    \"flex justify-center flex-wrap m-2 bg-yellow-200 rounded relative border\";\r\n\r\n  let completeStyle =\r\n    \"flex justify-center flex-wrap m-2 bg-red-100 border border-red-400 text-red-700 px-2 rounded relative\";\r\n  // let completeStyle =\r\n  //   \"flex justify-center flex-wrap m-2 bg-red-200 rounded relative border\";\r\n\r\n  const habitState = {\r\n    COMPLETE: \"complete\",\r\n    ALMOSTCOMPLETE: \"almostComplete\",\r\n    INCOMPLETE: \"incomplete\",\r\n  };\r\n\r\n  let habitStateCss = new Map();\r\n  habitStateCss.set(habitState.COMPLETE, completeStyle);\r\n  habitStateCss.set(habitState.INCOMPLETE, incompleteStyle);\r\n  habitStateCss.set(habitState.ALMOSTCOMPLETE, almostCompleteStyle);\r\n\r\n  function triggerNotification() {\r\n    let permission;\r\n\r\n    if (!(\"Notification\" in window)) {\r\n      alert(\"This browser does not support desktop notification\");\r\n    }\r\n\r\n    // Otherwise, we need to ask the user for permission\r\n    else if (Notification.permission !== \"denied\") {\r\n      permission = Notification.requestPermission();\r\n    }\r\n\r\n    console.log(Notification.permission);\r\n    console.log(permission);\r\n\r\n    if (permission === \"granted\" || Notification.permission === \"granted\") {\r\n      var notification = new Notification(`Finished ${habit.name}!`);\r\n    }\r\n  }\r\n\r\n  function handleClick() {\r\n    console.log(\"handleClick\");\r\n\r\n    habit.duration -= 1;\r\n\r\n    if (habit.duration <= 0) {\r\n      clearInterval(curr_interval);\r\n      habit.habitState = habitState.COMPLETE;\r\n      triggerNotification();\r\n      // console.log(\"habitState = complete\");\r\n    } else if (habit.duration <= habit.prevDuration / 3 && habit.duration > 0) {\r\n      habit.habitState = habitState.ALMOSTCOMPLETE;\r\n      // console.log(\"habitState = almostcomplete\");\r\n    } else {\r\n      // console.log(\"habitState = incomplete\");\r\n      habit.habitState = habitState.INCOMPLETE;\r\n    }\r\n\r\n    console.log(habit);\r\n    // habit = habit;\r\n    // console.log(currHabitStateCss);\r\n  }\r\n\r\n  function startPauseHabit() {\r\n    console.log(\"startPauseHabit\");\r\n    if (intervalActive == true) {\r\n      // pausing\r\n      clearInterval(curr_interval);\r\n      intervalActive = false;\r\n    } else {\r\n      //starting\r\n      habit.prevDuration = habit.duration;\r\n      curr_interval = setInterval(handleClick, 1000);\r\n      intervalActive = true;\r\n    }\r\n    // habit = habit;\r\n  }\r\n\r\n  function resetHabit() {\r\n    console.log(\"resetHabit function\");\r\n    clearInterval(curr_interval);\r\n    intervalActive = false;\r\n    habit.duration = habit.prevDuration;\r\n    habit.habitState = habitState.INCOMPLETE;\r\n    // habit = habit;\r\n  }\r\n\r\n  let buttonCss =\r\n    \"bg-transparent hover:bg-yellow-100 text-grey font-semibold py-2 px-3 border-grey rounded m-2\";\r\n</script>\r\n\r\n<style>\r\n  .center {\r\n    text-align: center;\r\n    margin: 1em;\r\n    /* border: 3px solid green; */\r\n  }\r\n\r\n  .neumorph {\r\n    border-radius: 50px;\r\n    background: #55b9f3;\r\n    box-shadow: 20px 20px 60px #489dcf, -20px -20px 60px #62d5ff;\r\n  }\r\n</style>\r\n\r\n<div class={habitStateCss.get(habit.habitState)}>\r\n  <input class=\"center\" bind:value={habit.name} />\r\n  <span class=\"center\">duration (secs):</span>\r\n  <input\r\n    class=\"center\"\r\n    size=\"2\"\r\n    type=\"text\"\r\n    bind:value={habit.duration}\r\n    min=\"1\"\r\n    max=\"86400\"\r\n    pattern=\"[0-9]*\"\r\n    title=\"Please use a number between 1 and 86,400\" />\r\n  <button\r\n    class={buttonCss}\r\n    on:click={startPauseHabit}\r\n    onkeypress={(x) => {\r\n      console.log(x);\r\n    }}>\r\n    {intervalActive == false ? 'Start' : 'Pause'}\r\n  </button>\r\n\r\n  <button class={buttonCss} on:click={resetHabit}> Reset </button>\r\n  <button class={buttonCss} on:click={handleDelete(habit.id)}>Delete </button>\r\n</div>\r\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.9.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","<script>\r\n  import Tailwindcss from \"./Tailwindcss.svelte\";\r\n  import HabitView from \"./Habit.svelte\";\r\n  import { onMount } from \"svelte\";\r\n  import localforage from \"localforage\";\r\n\r\n  const habitState = {\r\n    COMPLETE: \"complete\",\r\n    ALMOSTCOMPLETE: \"almostComplete\",\r\n    INCOMPLETE: \"incomplete\",\r\n  };\r\n\r\n  class Habit {\r\n    constructor() {\r\n      this.id = create_UUID();\r\n      this.name = \"\";\r\n      this.duration = 5 * 60;\r\n      this.hitCount = 0;\r\n      this.habitState = habitState.INCOMPLETE;\r\n    }\r\n  }\r\n\r\n  // localforage.config({ name: \"HabitReminder\" });\r\n\r\n  let habits;\r\n  let habitView = [];\r\n\r\n  onMount(async () => {\r\n    console.log(\"onMount triggered\");\r\n    habits = await loadHabits();\r\n    await updateHabitView();\r\n  });\r\n\r\n  async function saveHabits() {\r\n    console.log(\"Saving habits\");\r\n    await localforage.setItem(\"habits\", JSON.stringify([...habits.values()]));\r\n  }\r\n\r\n  async function loadHabits() {\r\n    let habitMap = new Map();\r\n\r\n    console.log(\"Loading habits\");\r\n\r\n    let loadedHabits;\r\n\r\n    await localforage\r\n      .getItem(\"habits\")\r\n      .then((value) => {\r\n        loadedHabits = JSON.parse(value);\r\n        if (loadedHabits.length != 0) {\r\n          for (let val of loadedHabits) {\r\n            habitMap.set(val.id, val);\r\n          }\r\n        } else {\r\n          habitMap = new Map();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        loadedHabits = new Array();\r\n        habitMap = new Map();\r\n      });\r\n\r\n    console.log(\"Loaded objects:\");\r\n    console.log(\"loadedHabits:\");\r\n    console.log(loadedHabits);\r\n    console.log(\"HabitMap:\");\r\n    console.log(habitMap);\r\n\r\n    return habitMap;\r\n  }\r\n\r\n  function create_UUID() {\r\n    var dt = new Date().getTime();\r\n    var uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\r\n      /[xy]/g,\r\n      function (c) {\r\n        var r = (dt + Math.random() * 16) % 16 | 0;\r\n        dt = Math.floor(dt / 16);\r\n        return (c == \"x\" ? r : (r & 0x3) | 0x8).toString(16);\r\n      }\r\n    );\r\n    return uuid;\r\n  }\r\n\r\n  function addHabit() {\r\n    let newHabit = new Habit();\r\n    console.log(\"addHabit\");\r\n    console.log(habits);\r\n    habits.set(newHabit.id, newHabit);\r\n    updateHabitView();\r\n  }\r\n\r\n  async function resetHabits() {\r\n    await localforage.removeItem(\"habits\");\r\n    habits = new Map();\r\n    updateHabitView();\r\n  }\r\n\r\n  function deleteHabit(habitId) {\r\n    console.log(JSON.stringify(habits.get(habitId)));\r\n    habits.delete(habitId);\r\n    updateHabitView();\r\n  }\r\n\r\n  function updateHabitView() {\r\n    habitView = Array.from(habits.values());\r\n    saveHabits();\r\n  }\r\n</script>\r\n\r\n<main charset=\"UTF-8\">\r\n  {#each habitView as habit}\r\n    <HabitView {habit} handleDelete={deleteHabit} />\r\n  {/each}\r\n  <div class=\"flex justify-center\">\r\n    <button\r\n      class=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded m-2\"\r\n      on:click={addHabit}>\r\n      Create new habit\r\n    </button>\r\n    <button\r\n      class=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded m-2\"\r\n      on:click={resetHabits}>\r\n      Reset habits\r\n    </button>\r\n    <button\r\n      class=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded m-2\"\r\n      on:click={saveHabits}>\r\n      Save habits\r\n    </button>\r\n  </div>\r\n</main>\r\n","import App from './App.svelte';\r\n\r\n// document.onkeypress = (e) => {\r\n// \tconsole.log(e)\r\n// }\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\tprops: {\r\n\t\tname: 'world'\r\n\t}\r\n});\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_input_value","input","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","buttonCss","get","habitState","duration","id","wholeText","curr_interval","intervalActive","onkeydown","console","log","key","startPauseHabit","handleDelete","habit","habitStateCss","handleClick","clearInterval","permission","window","Notification","requestPermission","alert","triggerNotification","prevDuration","setInterval","set","x","module","e","t","n","r","s","u","require","f","code","exports","call","1","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","observe","characterData","setImmediate","MessageChannel","scriptEl","onreadystatechange","documentElement","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","immediate","task","self","2","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","returnValue","reject","getThen","apply","arguments","thenable","onError","onSuccess","tryToUnwrap","result","tryCatch","status","out","reason","all","iterable","prototype","toString","values","resolved","allResolver","resolveFromAll","outValue","error","race","response","constructor","3","4","_typeof","Symbol","iterator","_classCallCheck","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","open","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","IDBKeyRange","createBlob","parts","properties","Blob","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","getBlob","Promise$1","executeCallback","executeTwoCallbacks","errorCallback","normalizeKey","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupportWithoutCaching","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","db","close","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","mode","retries","undefined","tx","_initStorage","initPromises","ignoreErrors","j","slice","_defaultConfig","k","getItem","req","iterate","openCursor","iterationNumber","cursor","setItem","blobSupport","store","removeItem","count","advanced","openKeyCursor","advance","dropInstance","currentConfig","config","dbPromise","deleteObjectStore","_forage2","deleteDatabase","onblocked","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","buffer","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","y","isNaN","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","localforage_js","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","iterations","Habit","dt","Date","getTime","Math","random","floor","hitCount","habits","habitView","saveHabits","localforage","updateHabitView","loadedHabits","habitMap","val","catch","loadHabits","newHabit","habitId","body"],"mappings":"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"}